{"version":3,"file":"static/webpack/static/development/pages/_app.js.e3dbea891e260b4a8b70.hot-update.js","sources":["webpack:///./pages/_app.tsx"],"sourcesContent":["import React from 'react';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, Store } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport App, { Container } from 'next/app';\nimport rootReducer from '../src/store/reducers/rootReducer';\n// import setAuthorizationToken from '../src/components/utils/setAuthorizationToken';\n// import jwtDecode from 'jwt-decode';\n// import { setCurrentUser } from '../src/store/actions/authActions';\nimport withRedux from 'next-redux-wrapper';\n\nconst stored = () =>\n  createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\ntype Props = {\n  Component: React.Component;\n  store: Store;\n};\n\nclass MyApp extends App<Props> {\n  static async getInitialProps({ Component, ctx }) {\n    const pageProps = Component.getInitialProps\n      ? await Component.getInitialProps(ctx)\n      : {};\n    return { pageProps };\n  }\n\n  render() {\n    const { store, Component, pageProps } = this.props;\n    return (\n      // <Container>\n      <Provider store={store}>\n        <Component {...pageProps} />\n      </Provider>\n      // </Container>\n    );\n  }\n}\n\nexport default withRedux(stored)(MyApp);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAOA;;;;;;;;;;;;;AAQA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AAHA;AAOA;;;;;;;;;;;;AAhBA;AACA;AAAA;;;;;;AACA;AACA;;;;;;;AAAA;AACA;;AAHA;AAGA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AANA;AACA;AAmBA;;;;A","sourceRoot":""}