{"version":3,"file":"static/webpack/static/development/pages/_app.js.680fcc9e3b1cb5a9e136.hot-update.js","sources":["webpack:///./src/store/reducers/cartReducer.ts"],"sourcesContent":["import {\n  ADD_TO_CART,\n  REMOVE_ITEM,\n  ADD_QUANTITY,\n  SUB_QUANTITY\n} from '../actions/types';\n\nconst initState = {\n  addedItems: [],\n  total: 0\n};\n\nconst addCart = (\n  state: { addedItems: any; total: any },\n  action: { data: { _id: string; quantity: number; price: string | number } }\n) => {\n  let existed_item = state.addedItems.find(\n    (item: { _id: string }) => action.data._id === item._id\n  );\n\n  if (existed_item) {\n    action.data.quantity += 1;\n    return {\n      ...state,\n      total: state.total + action.data.price\n    };\n  } else {\n    action.data.quantity = 1;\n    //calculating the total\n    let newTotal = state.total + action.data.price;\n\n    return {\n      ...state,\n      addedItems: [...state.addedItems, action.data],\n      total: newTotal\n    };\n  }\n};\n\nconst removeCart = (\n  state: { addedItems: any; total: any },\n  action: { id: any }\n) => {\n  let itemToRemove = state.addedItems.find(\n    (item: { _id: string }) => action.id === item._id\n  );\n  let new_items = state.addedItems.filter(\n    (item: { _id: string }) => action.id !== item._id\n  );\n\n  //calculating the total\n  let newTotal = state.total - itemToRemove.price * itemToRemove.quantity;\n  console.log(itemToRemove);\n  return {\n    ...state,\n    addedItems: new_items,\n    total: newTotal\n  };\n};\n\nconst increaseQuantity = (\n  state: { addedItems: any; total: any },\n  action: { id: string }\n) => {\n  let addedItem = state.addedItems.find(\n    (item: { _id: string }) => item._id === action.id\n  );\n  addedItem.quantity += 1;\n  let newTotal = state.total + addedItem.price;\n  return {\n    ...state,\n    total: newTotal\n  };\n};\n\nconst decreaseQuantity = (\n  state: { addedItems: any; total: any },\n  action: { id: any }\n) => {\n  let addedItem = state.addedItems.find(\n    (item: { _id: string }) => item._id === action.id\n  );\n  //if the qt == 0 then it should be removed\n  if (addedItem.quantity === 1) {\n    let new_items = state.addedItems.filter(\n      (item: { id: string }) => item.id !== action.id\n    );\n    let newTotal = state.total - addedItem.price;\n    return {\n      ...state,\n      addedItems: new_items,\n      total: newTotal\n    };\n  } else {\n    addedItem.quantity -= 1;\n    let newTotal = state.total - addedItem.price;\n    return {\n      ...state,\n      total: newTotal\n    };\n  }\n};\n\n// type Action = {\n//   _id: string;\n//   quantity: number;\n//   price: string\n// }\n\n// { _id: string; quantity: number; price: string | number; }\n\nconst cart = (\n  state = initState,\n  action: {\n    data: { _id: string; quantity: number; price: string | number };\n    id: string;\n    type?: string;\n  }\n) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return addCart(state, action);\n    case REMOVE_ITEM:\n      return removeCart(state, action);\n    case ADD_QUANTITY:\n      return increaseQuantity(state, action);\n    case SUB_QUANTITY:\n      return decreaseQuantity(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default cart;\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAOA;AACA;AACA;AAFA;AACA;AAIA;AAIA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAIA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AAIA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AAFA;AAIA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAVA;AAYA;AACA;AACA;;;;A","sourceRoot":""}