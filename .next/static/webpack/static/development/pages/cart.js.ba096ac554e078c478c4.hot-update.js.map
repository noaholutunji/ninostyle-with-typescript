{"version":3,"file":"static/webpack/static/development/pages/cart.js.ba096ac554e078c478c4.hot-update.js","sources":["webpack:///./src/components/Cart/Cart.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport Navbar from '../Navbar/Navbar';\nimport Footer from '../Footer/Footer';\nimport { IntProps } from '../Products/Body/Body';\nimport {\n  removeItem,\n  addQuantity,\n  subtractQuantity\n} from '../../store/actions/cartActions';\nimport {\n  MDBRow,\n  MDBCard,\n  MDBCardBody,\n  MDBCol,\n  // MDBTooltip,\n  MDBTable,\n  MDBTableBody,\n  MDBTableHead,\n  // MDBInput,\n  MDBBtn\n} from 'mdbreact';\n\nconst ImgCart = styled.img`\n  max-height: 150px;\n  min-width: 50px;\n`;\n\nconst ProductTable = styled(MDBTable)`\n  td {\n    vertical-align: middle;\n    &:nth-child(6) {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-end;\n    }\n  }\n`;\n\nexport const Cart = (props: IntProps) => {\n  const handleRemove = (product: {}) => {\n    props.removeItem(product);\n  };\n  //to add the quantity\n  const handleAddQuantity = (product: {}) => {\n    props.addQuantity(product);\n  };\n  //to substruct from the quantity\n  const handleSubtractQuantity = (product: {}) => {\n    props.subtractQuantity(product);\n  };\n\n  const cart = props.cart;\n\n  const [cols] = useState([\n    {\n      label: '',\n      field: 'img'\n    },\n    {\n      label: 'Product',\n      field: 'product'\n    },\n\n    {\n      label: 'Price',\n      field: 'price'\n    },\n    {\n      label: 'QTY',\n      field: 'qty'\n    },\n    {\n      label: 'Amount',\n      field: 'amount'\n    },\n    {\n      label: '',\n      field: 'button'\n    }\n  ]);\n\n  const rows:\n    | {\n        [rest: string]: any;\n        clickEvent?: (() => void) | undefined;\n        colspan?: number | undefined;\n      }[]\n    | {\n        img: JSX.Element;\n        product: JSX.Element[];\n        price: string;\n        qty: string;\n        amount: JSX.Element;\n        button: JSX.Element;\n      }[]\n    | undefined = [];\n  cart.addedItems.map(\n    (item: {\n      image: string | undefined;\n      name: React.ReactNode;\n      price: number;\n      quantity: number;\n      _id: {};\n    }) => {\n      return rows.push({\n        img: (\n          <ImgCart src={item.image} alt=\"\" className=\"img-fluid z-depth-0\" />\n        ),\n\n        product: [\n          <h5 className=\"mt-3\">\n            <strong>{item.name}</strong>\n          </h5>\n        ],\n        price: `₦ ${item.price}`,\n        qty: `${item.quantity}`,\n        amount: <strong>₦ {item.quantity * item.price}</strong>,\n        button: (\n          <>\n            {/* <MDBTooltip placement=\"top\"> */}\n            <MDBBtn\n              title=\"Increase quantity\"\n              color=\"success\"\n              size=\"sm\"\n              onClick={() => {\n                handleAddQuantity(item._id);\n              }}\n            >\n              +\n            </MDBBtn>\n            {/* <div>Increase quantity</div> */}\n            {/* </MDBTooltip> */}\n            {/* <MDBTooltip placement=\"top\"> */}\n            <MDBBtn\n              color=\"info\"\n              size=\"sm\"\n              onClick={() => {\n                handleSubtractQuantity(item._id);\n              }}\n              disabled={this.quantity === 1}\n            >\n              -\n            </MDBBtn>\n            {/* <div>Decrease quantity</div> */}\n            {/* </MDBTooltip> */}\n            {/* <MDBTooltip placement=\"top\"> */}\n            <MDBBtn\n              color=\"danger\"\n              size=\"sm\"\n              onClick={() => {\n                handleRemove(item._id);\n              }}\n            >\n              X\n            </MDBBtn>\n            {/* <div>Remove item</div> */}\n            {/* </MDBTooltip> */}\n          </>\n        )\n      });\n    }\n  );\n\n  return cart.addedItems.length > 0 ? (\n    <>\n      <Navbar />\n      <MDBRow className=\"my-2 ml-3 mr-1\" center>\n        <MDBCol xs=\"6\" md=\"12\">\n          <MDBCard className=\"w-100\">\n            <MDBCardBody>\n              <ProductTable className=\"product-table\">\n                <MDBTableHead\n                  className=\"font-weight-bold\"\n                  color=\"mdb-color lighten-5\"\n                  columns={cols}\n                />\n                <MDBTableBody rows={rows} />\n              </ProductTable>\n            </MDBCardBody>\n          </MDBCard>\n          <div className=\"text-center\">\n            <h3 className=\"my-4\">\n              <strong>Total:</strong> ₦ {cart.total}\n            </h3>\n\n            <p className=\"lead mt-3 py-2 ml-5\">\n              <Link href=\"/checkout\">\n                <MDBBtn color=\"primary\">CheckOut</MDBBtn>\n              </Link>\n            </p>\n          </div>\n        </MDBCol>\n      </MDBRow>\n      <Footer />\n    </>\n  ) : (\n    <>\n      <Navbar />\n      <p className=\"text-center my-5\">\n        <strong>Your cart is empty!!!</strong>\n      </p>\n      <Footer />\n    </>\n  );\n};\n\nconst mapStateToProps = (state: { cart: {} }) => {\n  return {\n    cart: state.cart\n  };\n};\n\nconst mapDispatchToProps = (dispatch: {\n  (arg0: { type: string; id: string }): void;\n  (arg0: { type: string; id: string }): void;\n  (arg0: { type: string; id: string }): void;\n}) => {\n  return {\n    removeItem: (product: string) => {\n      dispatch(removeItem(product));\n    },\n    addQuantity: (product: string) => {\n      dispatch(addQuantity(product));\n    },\n    subtractQuantity: (product: string) => {\n      dispatch(subtractQuantity(product));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Cart);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAaA;AAKA;AAWA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAdA;AAiBA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AArCA;AACA;AA0CA;AAeA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AAcA;AACA;AACA;AACA;AACA;AACA;AANA;AAcA;AACA;AACA;AACA;AACA;AALA;AA1CA;AAwDA;AAGA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAIA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAWA;AAAA;AAMA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;;;;A","sourceRoot":""}