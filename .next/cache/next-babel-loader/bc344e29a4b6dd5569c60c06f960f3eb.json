{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createProduct } from '../../store/actions/productActions';\nimport PropTypes from 'prop-types';\nimport { Navbar } from '../../components/Navbar/Navbar';\nimport Router from 'next/router';\nimport Footer from '../../components/Footer/Footer'; // import { Redirect } from 'react-router-dom';\n\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody } from 'mdbreact';\n\nconst NewProduct = props => {\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: brand,\n    1: setBrand\n  } = useState('');\n  const {\n    0: price,\n    1: setPrice\n  } = useState('');\n  const {\n    0: image,\n    1: setImage\n  } = useState('');\n  const {\n    0: description,\n    1: setDescription\n  } = useState(''); // const [redirect, setRedirect] = useState(false);\n\n  const handleNameChange = event => setName(event.target.value);\n\n  const handleBrandChange = event => setBrand(event.target.value);\n\n  const handlePriceChange = event => setPrice(event.target.value);\n\n  const handleImageChange = event => setImage(event.target.value);\n\n  const handleDescriptionChange = event => setDescription(event.target.value);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const data = {\n      name,\n      brand,\n      price,\n      image,\n      description\n    };\n\n    try {\n      await props.createProduct(data); // setRedirect(true);\n\n      Router.push('/products');\n    } catch (error) {\n      console.log(error);\n    }\n  }; // if (redirect) {\n  //   return <Redirect to={'/products'} />;\n  // }\n\n\n  return __jsx(React.Fragment, null, __jsx(Navbar, null), __jsx(MDBContainer, null, __jsx(MDBRow, {\n    className: \"justify-content-center mt-5\"\n  }, __jsx(MDBCol, {\n    md: \"6\"\n  }, __jsx(MDBCard, null, __jsx(MDBCardBody, null, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"p\", {\n    className: \"h4 text-center py-1\"\n  }, \"Add New Product\"), __jsx(\"div\", {\n    className: \"grey-text\"\n  }, __jsx(MDBInput, {\n    label: \"Name\",\n    icon: \"user\",\n    group: true,\n    type: \"text\",\n    value: name,\n    onChange: handleNameChange,\n    validate: true,\n    error: \"wrong\",\n    success: \"right\"\n  }), __jsx(MDBInput, {\n    label: \"Brand\",\n    icon: \"mobile\",\n    group: true,\n    type: \"text\",\n    value: brand,\n    onChange: handleBrandChange,\n    validate: true,\n    error: \"wrong\",\n    success: \"right\"\n  }), __jsx(MDBInput, {\n    label: \"Price\",\n    icon: \"tag\",\n    group: true,\n    type: \"number\",\n    value: price,\n    onChange: handlePriceChange,\n    validate: true,\n    error: \"wrong\",\n    success: \"right\"\n  }), __jsx(MDBInput, {\n    label: \"Image\",\n    icon: \"image\",\n    group: true,\n    type: \"text\",\n    value: image,\n    onChange: handleImageChange,\n    validate: true,\n    error: \"wrong\",\n    success: \"right\"\n  }), __jsx(MDBInput, {\n    label: \"Description\",\n    icon: \"pencil-alt\",\n    group: true,\n    type: \"text\",\n    value: description,\n    onChange: handleDescriptionChange,\n    validate: true\n  })), __jsx(\"div\", {\n    className: \"text-center\"\n  }, __jsx(MDBBtn, {\n    color: \"cyan\",\n    type: \"submit\"\n  }, \"Add Product\")))))))), __jsx(Footer, null));\n};\n\nNewProduct.propTypes = {\n  createProduct: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  createProduct\n})(NewProduct);","map":{"version":3,"sources":["/home/noah/Desktop/ninostyle-next-typescript/src/containers/NewProduct/NewProduct.tsx"],"names":["React","useState","connect","createProduct","PropTypes","Navbar","Router","Footer","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","MDBCard","MDBCardBody","NewProduct","props","name","setName","brand","setBrand","price","setPrice","image","setImage","description","setDescription","handleNameChange","event","target","value","handleBrandChange","handlePriceChange","handleImageChange","handleDescriptionChange","handleSubmit","preventDefault","data","push","error","console","log","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, SyntheticEvent } from 'react';\nimport { connect } from 'react-redux';\nimport { createProduct } from '../../store/actions/productActions';\nimport PropTypes from 'prop-types';\nimport { Navbar } from '../../components/Navbar/Navbar';\nimport Router from 'next/router';\nimport Footer from '../../components/Footer/Footer';\n// import { Redirect } from 'react-router-dom';\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody\n} from 'mdbreact';\n\nconst NewProduct = props => {\n  const [name, setName] = useState<string>('');\n  const [brand, setBrand] = useState<string>('');\n  const [price, setPrice] = useState<string>('');\n  const [image, setImage] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n  // const [redirect, setRedirect] = useState(false);\n\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setName(event.target.value);\n  const handleBrandChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setBrand(event.target.value);\n  const handlePriceChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setPrice(event.target.value);\n  const handleImageChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setImage(event.target.value);\n  const handleDescriptionChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => setDescription(event.target.value);\n\n  const handleSubmit = async (event: SyntheticEvent) => {\n    event.preventDefault();\n    const data = {\n      name,\n      brand,\n      price,\n      image,\n      description\n    };\n    try {\n      await props.createProduct(data);\n      // setRedirect(true);\n      Router.push('/products');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // if (redirect) {\n  //   return <Redirect to={'/products'} />;\n  // }\n\n  return (\n    <>\n      <Navbar />\n      <MDBContainer>\n        <MDBRow className=\"justify-content-center mt-5\">\n          <MDBCol md=\"6\">\n            <MDBCard>\n              <MDBCardBody>\n                <form onSubmit={handleSubmit}>\n                  <p className=\"h4 text-center py-1\">Add New Product</p>\n                  <div className=\"grey-text\">\n                    <MDBInput\n                      label=\"Name\"\n                      icon=\"user\"\n                      group\n                      type=\"text\"\n                      value={name}\n                      onChange={handleNameChange}\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                    />\n                    <MDBInput\n                      label=\"Brand\"\n                      icon=\"mobile\"\n                      group\n                      type=\"text\"\n                      value={brand}\n                      onChange={handleBrandChange}\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                    />\n                    <MDBInput\n                      label=\"Price\"\n                      icon=\"tag\"\n                      group\n                      type=\"number\"\n                      value={price}\n                      onChange={handlePriceChange}\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                    />\n                    <MDBInput\n                      label=\"Image\"\n                      icon=\"image\"\n                      group\n                      type=\"text\"\n                      value={image}\n                      onChange={handleImageChange}\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                    />\n                    <MDBInput\n                      label=\"Description\"\n                      icon=\"pencil-alt\"\n                      group\n                      type=\"text\"\n                      value={description}\n                      onChange={handleDescriptionChange}\n                      validate\n                    />\n                  </div>\n                  <div className=\"text-center\">\n                    <MDBBtn color=\"cyan\" type=\"submit\">\n                      Add Product\n                    </MDBBtn>\n                  </div>\n                </form>\n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n      <Footer />\n    </>\n  );\n};\n\nNewProduct.propTypes = {\n  createProduct: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { createProduct }\n)(NewProduct);\n"]},"metadata":{},"sourceType":"module"}