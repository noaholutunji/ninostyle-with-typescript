{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  td {\\n    vertical-align: middle;\\n    &:nth-child(6) {\\n      display: flex;\\n      flex-direction: column;\\n      align-items: flex-end;\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  max-height: 150px;\\n  min-width: 50px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { removeItem as _removeItem, addQuantity as _addQuantity, subtractQuantity as _subtractQuantity } from '../../store/actions/cartActions';\nimport { MDBRow, MDBCard, MDBCardBody, MDBCol // MDBTooltip,\n, MDBTable, MDBTableBody, MDBTableHead // MDBInput,\n, MDBBtn } from 'mdbreact';\nvar ImgCart = styled.img(_templateObject());\nvar ProductTable = styled(MDBTable)(_templateObject2());\nexport var Cart = function Cart(props) {\n  var handleRemove = function handleRemove(product) {\n    props.removeItem(product);\n  }; //to add the quantity\n\n\n  var handleAddQuantity = function handleAddQuantity(product) {\n    props.addQuantity(product);\n  }; //to substruct from the quantity\n\n\n  var handleSubtractQuantity = function handleSubtractQuantity(product) {\n    props.subtractQuantity(product);\n  };\n\n  var cart = props.cart;\n\n  var _useState = useState([{\n    label: '',\n    field: 'img'\n  }, {\n    label: 'Product',\n    field: 'product'\n  }, {\n    label: 'Price',\n    field: 'price'\n  }, {\n    label: 'QTY',\n    field: 'qty'\n  }, {\n    label: 'Amount',\n    field: 'amount'\n  }, {\n    label: '',\n    field: 'button'\n  }]),\n      cols = _useState[0];\n\n  var rows = [];\n  cart.addedItems.map(function (item) {\n    return rows.push({\n      img: __jsx(ImgCart, {\n        src: item.image,\n        alt: \"\",\n        className: \"img-fluid z-depth-0\"\n      }),\n      product: [__jsx(\"h5\", {\n        className: \"mt-3\"\n      }, __jsx(\"strong\", null, item.name))],\n      price: \"\\u20A6 \".concat(item.price.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')),\n      qty: \"\".concat(item.quantity),\n      amount: __jsx(\"strong\", null, \"\\u20A6\", ' ', (item.quantity * item.price).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')),\n      button: __jsx(React.Fragment, null, __jsx(MDBBtn, {\n        title: \"Increase quantity\",\n        color: \"success\",\n        size: \"sm\",\n        onClick: function onClick() {\n          handleAddQuantity(item._id);\n        }\n      }, \"+\"), __jsx(MDBBtn, {\n        color: \"info\",\n        size: \"sm\",\n        onClick: function onClick() {\n          handleSubtractQuantity(item._id);\n        },\n        disabled: item.quantity === 1\n      }, \"-\"), __jsx(MDBBtn, {\n        color: \"danger\",\n        size: \"sm\",\n        onClick: function onClick() {\n          handleRemove(item._id);\n        }\n      }, \"X\"))\n    });\n  });\n  return cart.addedItems.length > 0 ? __jsx(React.Fragment, null, __jsx(MDBRow, {\n    className: \"my-2 ml-3 mr-1 mb-5\",\n    center: true\n  }, __jsx(MDBCol, {\n    xs: \"6\",\n    md: \"12\"\n  }, __jsx(MDBCard, {\n    className: \"w-100\"\n  }, __jsx(MDBCardBody, null, __jsx(ProductTable, {\n    className: \"product-table\",\n    responsive: true\n  }, __jsx(MDBTableHead, {\n    className: \"font-weight-bold\",\n    color: \"mdb-color lighten-5\",\n    columns: cols\n  }), __jsx(MDBTableBody, {\n    rows: rows\n  })))), __jsx(\"div\", {\n    className: \"text-center\"\n  }, __jsx(\"h3\", {\n    className: \"my-4\"\n  }, __jsx(\"strong\", null, \"Total:\"), \" \\u20A6\", ' ', cart.total.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')), __jsx(\"p\", {\n    className: \"lead mt-3 py-2 ml-5\"\n  }, __jsx(Link, {\n    href: \"/checkout\"\n  }, __jsx(MDBBtn, {\n    color: \"primary\"\n  }, \"CheckOut\"))))))) : __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"text-center my-5\"\n  }, __jsx(\"h5\", null, __jsx(\"strong\", null, \"Your cart is empty!\"))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cart: state.cart\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    removeItem: function removeItem(product) {\n      dispatch(_removeItem(product));\n    },\n    addQuantity: function addQuantity(product) {\n      dispatch(_addQuantity(product));\n    },\n    subtractQuantity: function subtractQuantity(product) {\n      dispatch(_subtractQuantity(product));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","map":{"version":3,"sources":["/home/noah/Desktop/ninostyle-next-typescript/src/components/Cart/Cart.tsx"],"names":["React","useState","connect","Link","styled","removeItem","addQuantity","subtractQuantity","MDBRow","MDBCard","MDBCardBody","MDBCol","MDBTable","MDBTableBody","MDBTableHead","MDBBtn","ImgCart","img","ProductTable","Cart","props","handleRemove","product","handleAddQuantity","handleSubtractQuantity","cart","label","field","cols","rows","addedItems","map","item","push","image","name","price","toFixed","replace","qty","quantity","amount","button","_id","length","total","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport Navbar from '../Navbar/Navbar';\nimport Footer from '../Footer/Footer';\nimport { IntProps } from '../Products/Body/Body';\nimport {\n  removeItem,\n  addQuantity,\n  subtractQuantity\n} from '../../store/actions/cartActions';\nimport {\n  MDBRow,\n  MDBCard,\n  MDBCardBody,\n  MDBCol,\n  // MDBTooltip,\n  MDBTable,\n  MDBTableBody,\n  MDBTableHead,\n  // MDBInput,\n  MDBBtn\n} from 'mdbreact';\n\nconst ImgCart = styled.img`\n  max-height: 150px;\n  min-width: 50px;\n`;\n\nconst ProductTable = styled(MDBTable)`\n  td {\n    vertical-align: middle;\n    &:nth-child(6) {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-end;\n    }\n  }\n`;\n\nexport const Cart = (props: IntProps) => {\n  const handleRemove = (product: {}) => {\n    props.removeItem(product);\n  };\n  //to add the quantity\n  const handleAddQuantity = (product: {}) => {\n    props.addQuantity(product);\n  };\n  //to substruct from the quantity\n  const handleSubtractQuantity = (product: {}) => {\n    props.subtractQuantity(product);\n  };\n\n  const cart = props.cart;\n\n  const [cols] = useState([\n    {\n      label: '',\n      field: 'img'\n    },\n    {\n      label: 'Product',\n      field: 'product'\n    },\n\n    {\n      label: 'Price',\n      field: 'price'\n    },\n    {\n      label: 'QTY',\n      field: 'qty'\n    },\n    {\n      label: 'Amount',\n      field: 'amount'\n    },\n    {\n      label: '',\n      field: 'button'\n    }\n  ]);\n\n  const rows:\n    | {\n        [rest: string]: any;\n        clickEvent?: (() => void) | undefined;\n        colspan?: number | undefined;\n      }[]\n    | {\n        img: JSX.Element;\n        product: JSX.Element[];\n        price: string;\n        qty: string;\n        amount: JSX.Element;\n        button: JSX.Element;\n      }[]\n    | undefined = [];\n  cart.addedItems.map(\n    (item: {\n      image: string | undefined;\n      name: React.ReactNode;\n      price: number;\n      quantity: number;\n      _id: {};\n    }) => {\n      return rows.push({\n        img: (\n          <ImgCart src={item.image} alt=\"\" className=\"img-fluid z-depth-0\" />\n        ),\n\n        product: [\n          <h5 className=\"mt-3\">\n            <strong>{item.name}</strong>\n          </h5>\n        ],\n        price: `₦ ${item.price.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}`,\n\n        qty: `${item.quantity}`,\n        amount: (\n          <strong>\n            ₦{' '}\n            {(item.quantity * item.price)\n              .toFixed(2)\n              .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}\n          </strong>\n        ),\n\n        button: (\n          <>\n            {/* <MDBTooltip placement=\"top\"> */}\n            <MDBBtn\n              title=\"Increase quantity\"\n              color=\"success\"\n              size=\"sm\"\n              onClick={() => {\n                handleAddQuantity(item._id);\n              }}\n            >\n              +\n            </MDBBtn>\n            {/* <div>Increase quantity</div> */}\n            {/* </MDBTooltip> */}\n            {/* <MDBTooltip placement=\"top\"> */}\n            <MDBBtn\n              color=\"info\"\n              size=\"sm\"\n              onClick={() => {\n                handleSubtractQuantity(item._id);\n              }}\n              disabled={item.quantity === 1}\n            >\n              -\n            </MDBBtn>\n            {/* <div>Decrease quantity</div> */}\n            {/* </MDBTooltip> */}\n            {/* <MDBTooltip placement=\"top\"> */}\n            <MDBBtn\n              color=\"danger\"\n              size=\"sm\"\n              onClick={() => {\n                handleRemove(item._id);\n              }}\n            >\n              X\n            </MDBBtn>\n            {/* <div>Remove item</div> */}\n            {/* </MDBTooltip> */}\n          </>\n        )\n      });\n    }\n  );\n\n  return cart.addedItems.length > 0 ? (\n    <>\n      <MDBRow className=\"my-2 ml-3 mr-1 mb-5\" center>\n        <MDBCol xs=\"6\" md=\"12\">\n          <MDBCard className=\"w-100\">\n            <MDBCardBody>\n              <ProductTable className=\"product-table\" responsive>\n                <MDBTableHead\n                  className=\"font-weight-bold\"\n                  color=\"mdb-color lighten-5\"\n                  columns={cols}\n                />\n                <MDBTableBody rows={rows} />\n              </ProductTable>\n            </MDBCardBody>\n          </MDBCard>\n          <div className=\"text-center\">\n            <h3 className=\"my-4\">\n              <strong>Total:</strong> ₦{' '}\n              {cart.total.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}\n            </h3>\n\n            <p className=\"lead mt-3 py-2 ml-5\">\n              <Link href=\"/checkout\">\n                <MDBBtn color=\"primary\">CheckOut</MDBBtn>\n              </Link>\n            </p>\n          </div>\n        </MDBCol>\n      </MDBRow>\n    </>\n  ) : (\n    <>\n      <p className=\"text-center my-5\">\n        <h5>\n          <strong>Your cart is empty!</strong>\n        </h5>\n      </p>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: { cart: {} }) => {\n  return {\n    cart: state.cart\n  };\n};\n\nconst mapDispatchToProps = (dispatch: {\n  (arg0: { type: string; id: string }): void;\n  (arg0: { type: string; id: string }): void;\n  (arg0: { type: string; id: string }): void;\n}) => {\n  return {\n    removeItem: (product: string) => {\n      dispatch(removeItem(product));\n    },\n    addQuantity: (product: string) => {\n      dispatch(addQuantity(product));\n    },\n    subtractQuantity: (product: string) => {\n      dispatch(subtractQuantity(product));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Cart);\n"]},"metadata":{},"sourceType":"module"}