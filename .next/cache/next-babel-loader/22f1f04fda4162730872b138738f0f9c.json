{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Router from 'next/router';\nimport cookie from 'js-cookie';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody } from 'mdbreact';\n\nvar Register = function Register(props) {\n  var _useState = useState(''),\n      firstname = _useState[0],\n      setFirstname = _useState[1];\n\n  var _useState2 = useState(''),\n      lastname = _useState2[0],\n      setLastname = _useState2[1];\n\n  var _useState3 = useState(''),\n      email = _useState3[0],\n      setEmail = _useState3[1];\n\n  var _useState4 = useState(''),\n      phonenumber = _useState4[0],\n      setPhonenumber = _useState4[1];\n\n  var _useState5 = useState(''),\n      password = _useState5[0],\n      setPassword = _useState5[1]; // const [redirect, setRedirect] = useState(false);\n\n\n  var handleFirstnameChange = function handleFirstnameChange(event) {\n    return setFirstname(event.target.value);\n  };\n\n  var handleLastnameChange = function handleLastnameChange(event) {\n    return setLastname(event.target.value);\n  };\n\n  var handleEmailChange = function handleEmailChange(event) {\n    return setEmail(event.target.value);\n  };\n\n  var handlePhonenumberChange = function handlePhonenumberChange(event) {\n    return setPhonenumber(event.target.value);\n  };\n\n  var handlePasswordChange = function handlePasswordChange(event) {\n    return setPassword(event.target.value);\n  };\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(event) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              data = {\n                firstname: firstname,\n                lastname: lastname,\n                email: email,\n                phonenumber: phonenumber,\n                password: password\n              };\n              _context.prev = 2;\n              _context.next = 5;\n              return props.userRegisterRequest(data);\n\n            case 5:\n              Router.push('/products');\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 8]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (cookie.get('jwtToken')) {\n    Router.push('/products');\n  }\n\n  return __jsx(React.Fragment, null, __jsx(MDBContainer, null, __jsx(MDBRow, {\n    className: \"justify-content-center mt-5\"\n  }, __jsx(MDBCol, {\n    md: \"6\"\n  }, __jsx(MDBCard, null, __jsx(MDBCardBody, null, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"p\", {\n    className: \"h4 text-center py-1\"\n  }, \"Sign Up\"), __jsx(\"div\", {\n    className: \"grey-text\"\n  }, __jsx(MDBInput, {\n    label: \"First Name\",\n    icon: \"user\",\n    group: true,\n    type: \"text\",\n    value: firstname,\n    onChange: handleFirstnameChange,\n    validate: true,\n    error: \"wrong\",\n    success: \"right\"\n  }), __jsx(MDBInput, {\n    label: \"Last Name\",\n    icon: \"user\",\n    group: true,\n    type: \"text\",\n    value: lastname,\n    onChange: handleLastnameChange,\n    validate: true,\n    error: \"wrong\",\n    success: \"right\"\n  }), __jsx(MDBInput, {\n    label: \"Email Address\",\n    icon: \"envelope\",\n    group: true,\n    type: \"email\",\n    value: email,\n    onChange: handleEmailChange,\n    validate: true,\n    error: \"wrong\",\n    success: \"right\"\n  }), __jsx(MDBInput, {\n    label: \"Phone Number\",\n    icon: \"phone\",\n    group: true,\n    type: \"number\",\n    value: phonenumber,\n    onChange: handlePhonenumberChange,\n    validate: true,\n    error: \"wrong\",\n    success: \"right\"\n  }), __jsx(MDBInput, {\n    label: \"Password\",\n    icon: \"lock\",\n    group: true,\n    type: \"password\",\n    value: password,\n    onChange: handlePasswordChange,\n    validate: true\n  })), __jsx(\"div\", {\n    className: \"text-center\"\n  }, __jsx(MDBBtn, {\n    color: \"cyan\",\n    type: \"submit\"\n  }, \"Sign Up\")))))))));\n};\n\nRegister.propTypes = {\n  userRegisterRequest: PropTypes.func.isRequired\n};\nexport default Register;","map":{"version":3,"sources":["/home/noah/Desktop/ninostyle-next-typescript/src/containers/Register/Register.tsx"],"names":["React","useState","PropTypes","Router","cookie","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","MDBCard","MDBCardBody","Register","props","firstname","setFirstname","lastname","setLastname","email","setEmail","phonenumber","setPhonenumber","password","setPassword","handleFirstnameChange","event","target","value","handleLastnameChange","handleEmailChange","handlePhonenumberChange","handlePasswordChange","handleSubmit","preventDefault","data","userRegisterRequest","push","console","log","get","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, SyntheticEvent } from 'react';\nimport PropTypes from 'prop-types';\nimport Router from 'next/router';\nimport cookie from 'js-cookie';\n\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody\n} from 'mdbreact';\n\nconst Register = (props: {\n  userRegisterRequest: (arg0: {\n    firstname: string;\n    lastname: string;\n    email: string;\n    phonenumber: string;\n    password: string;\n  }) => void;\n}) => {\n  const [firstname, setFirstname] = useState<string>('');\n  const [lastname, setLastname] = useState<string>('');\n  const [email, setEmail] = useState<string>('');\n  const [phonenumber, setPhonenumber] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  // const [redirect, setRedirect] = useState(false);\n\n  const handleFirstnameChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setFirstname(event.target.value);\n  const handleLastnameChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setLastname(event.target.value);\n  const handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setEmail(event.target.value);\n  const handlePhonenumberChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => setPhonenumber(event.target.value);\n  const handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setPassword(event.target.value);\n\n  const handleSubmit = async (event: SyntheticEvent) => {\n    event.preventDefault();\n    const data = {\n      firstname,\n      lastname,\n      email,\n      phonenumber,\n      password\n    };\n    try {\n      await props.userRegisterRequest(data);\n      Router.push('/products');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (cookie.get('jwtToken')) {\n    Router.push('/products');\n  }\n\n  return (\n    <>\n      <MDBContainer>\n        <MDBRow className=\"justify-content-center mt-5\">\n          <MDBCol md=\"6\">\n            <MDBCard>\n              <MDBCardBody>\n                <form onSubmit={handleSubmit}>\n                  <p className=\"h4 text-center py-1\">Sign Up</p>\n                  <div className=\"grey-text\">\n                    <MDBInput\n                      label=\"First Name\"\n                      icon=\"user\"\n                      group\n                      type=\"text\"\n                      value={firstname}\n                      onChange={handleFirstnameChange}\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                    />\n                    <MDBInput\n                      label=\"Last Name\"\n                      icon=\"user\"\n                      group\n                      type=\"text\"\n                      value={lastname}\n                      onChange={handleLastnameChange}\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                    />\n                    <MDBInput\n                      label=\"Email Address\"\n                      icon=\"envelope\"\n                      group\n                      type=\"email\"\n                      value={email}\n                      onChange={handleEmailChange}\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                    />\n                    <MDBInput\n                      label=\"Phone Number\"\n                      icon=\"phone\"\n                      group\n                      type=\"number\"\n                      value={phonenumber}\n                      onChange={handlePhonenumberChange}\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                    />\n                    <MDBInput\n                      label=\"Password\"\n                      icon=\"lock\"\n                      group\n                      type=\"password\"\n                      value={password}\n                      onChange={handlePasswordChange}\n                      validate\n                    />\n                  </div>\n                  <div className=\"text-center\">\n                    <MDBBtn color=\"cyan\" type=\"submit\">\n                      Sign Up\n                    </MDBBtn>\n                  </div>\n                </form>\n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </>\n  );\n};\n\nRegister.propTypes = {\n  userRegisterRequest: PropTypes.func.isRequired\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}