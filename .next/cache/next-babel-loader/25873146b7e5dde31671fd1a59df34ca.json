{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createProduct } from '../../store/actions/productActions';\nimport PropTypes from 'prop-types';\nimport { Navbar } from '../../components/Navbar/Navbar';\nimport Router from 'next/router';\nimport Footer from '../../components/Footer/Footer'; // import { Redirect } from 'react-router-dom';\n\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody } from 'mdbreact';\n\nvar NewProduct = function NewProduct(props) {\n  var _useState = useState(''),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(''),\n      brand = _useState2[0],\n      setBrand = _useState2[1];\n\n  var _useState3 = useState(''),\n      price = _useState3[0],\n      setPrice = _useState3[1];\n\n  var _useState4 = useState(''),\n      image = _useState4[0],\n      setImage = _useState4[1];\n\n  var _useState5 = useState(''),\n      description = _useState5[0],\n      setDescription = _useState5[1]; // const [redirect, setRedirect] = useState(false);\n\n\n  var handleNameChange = function handleNameChange(event) {\n    return setName(event.target.value);\n  };\n\n  var handleBrandChange = function handleBrandChange(event) {\n    return setBrand(event.target.value);\n  };\n\n  var handlePriceChange = function handlePriceChange(event) {\n    return setPrice(event.target.value);\n  };\n\n  var handleImageChange = function handleImageChange(event) {\n    return setImage(event.target.value);\n  };\n\n  var handleDescriptionChange = function handleDescriptionChange(event) {\n    return setDescription(event.target.value);\n  };\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(event) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              data = {\n                name: name,\n                brand: brand,\n                price: price,\n                image: image,\n                description: description\n              };\n              _context.prev = 2;\n              _context.next = 5;\n              return props.createProduct(data);\n\n            case 5:\n              // setRedirect(true);\n              Router.push('/products');\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 8]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(); // if (redirect) {\n  //   return <Redirect to={'/products'} />;\n  // }\n\n\n  return __jsx(React.Fragment, null, __jsx(Navbar, null), __jsx(MDBContainer, null, __jsx(MDBRow, {\n    className: \"justify-content-center mt-5\"\n  }, __jsx(MDBCol, {\n    md: \"6\"\n  }, __jsx(MDBCard, null, __jsx(MDBCardBody, null, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"p\", {\n    className: \"h4 text-center py-1\"\n  }, \"Add New Product\"), __jsx(\"div\", {\n    className: \"grey-text\"\n  }, __jsx(MDBInput, {\n    label: \"Name\",\n    icon: \"user\",\n    group: true,\n    type: \"text\",\n    value: name,\n    onChange: handleNameChange,\n    validate: true,\n    error: \"wrong\",\n    success: \"right\"\n  }), __jsx(MDBInput, {\n    label: \"Brand\",\n    icon: \"mobile\",\n    group: true,\n    type: \"text\",\n    value: brand,\n    onChange: handleBrandChange,\n    validate: true,\n    error: \"wrong\",\n    success: \"right\"\n  }), __jsx(MDBInput, {\n    label: \"Price\",\n    icon: \"tag\",\n    group: true,\n    type: \"number\",\n    value: price,\n    onChange: handlePriceChange,\n    validate: true,\n    error: \"wrong\",\n    success: \"right\"\n  }), __jsx(MDBInput, {\n    label: \"Image\",\n    icon: \"image\",\n    group: true,\n    type: \"text\",\n    value: image,\n    onChange: handleImageChange,\n    validate: true,\n    error: \"wrong\",\n    success: \"right\"\n  }), __jsx(MDBInput, {\n    label: \"Description\",\n    icon: \"pencil-alt\",\n    group: true,\n    type: \"text\",\n    value: description,\n    onChange: handleDescriptionChange,\n    validate: true\n  })), __jsx(\"div\", {\n    className: \"text-center\"\n  }, __jsx(MDBBtn, {\n    color: \"cyan\",\n    type: \"submit\"\n  }, \"Add Product\")))))))), __jsx(Footer, null));\n};\n\nNewProduct.propTypes = {\n  createProduct: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  createProduct: createProduct\n})(NewProduct);","map":{"version":3,"sources":["/home/noah/Desktop/ninostyle-next-typescript/src/containers/NewProduct/NewProduct.tsx"],"names":["React","useState","connect","createProduct","PropTypes","Navbar","Router","Footer","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","MDBCard","MDBCardBody","NewProduct","props","name","setName","brand","setBrand","price","setPrice","image","setImage","description","setDescription","handleNameChange","event","target","value","handleBrandChange","handlePriceChange","handleImageChange","handleDescriptionChange","handleSubmit","preventDefault","data","push","console","log","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgD,OAAhD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,oCAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,gCAAvB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB,C,CACA;;AACA,SACEC,YADF,EAEEC,MAFF,EAGEC,MAHF,EAIEC,QAJF,EAKEC,MALF,EAMEC,OANF,EAOEC,WAPF,QAQO,UARP;;AAUA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAAA,kBACFf,QAAQ,CAAS,EAAT,CADN;AAAA,MACnBgB,IADmB;AAAA,MACbC,OADa;;AAAA,mBAEAjB,QAAQ,CAAS,EAAT,CAFR;AAAA,MAEnBkB,KAFmB;AAAA,MAEZC,QAFY;;AAAA,mBAGAnB,QAAQ,CAAS,EAAT,CAHR;AAAA,MAGnBoB,KAHmB;AAAA,MAGZC,QAHY;;AAAA,mBAIArB,QAAQ,CAAS,EAAT,CAJR;AAAA,MAInBsB,KAJmB;AAAA,MAIZC,QAJY;;AAAA,mBAKYvB,QAAQ,CAAS,EAAT,CALpB;AAAA,MAKnBwB,WALmB;AAAA,MAKNC,cALM,kBAM1B;;;AAEA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD;AAAA,WACvBV,OAAO,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CADgB;AAAA,GAAzB;;AAEA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACH,KAAD;AAAA,WACxBR,QAAQ,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CADgB;AAAA,GAA1B;;AAEA,MAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACJ,KAAD;AAAA,WACxBN,QAAQ,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CADgB;AAAA,GAA1B;;AAEA,MAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACL,KAAD;AAAA,WACxBJ,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CADgB;AAAA,GAA1B;;AAEA,MAAMI,uBAAuB,GAAG,SAA1BA,uBAA0B,CAC9BN,KAD8B;AAAA,WAE3BF,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAFa;AAAA,GAAhC;;AAIA,MAAMK,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,iBAAOP,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,KAAK,CAACQ,cAAN;AACMC,cAAAA,IAFa,GAEN;AACXpB,gBAAAA,IAAI,EAAJA,IADW;AAEXE,gBAAAA,KAAK,EAALA,KAFW;AAGXE,gBAAAA,KAAK,EAALA,KAHW;AAIXE,gBAAAA,KAAK,EAALA,KAJW;AAKXE,gBAAAA,WAAW,EAAXA;AALW,eAFM;AAAA;AAAA;AAAA,qBAUXT,KAAK,CAACb,aAAN,CAAoBkC,IAApB,CAVW;;AAAA;AAWjB;AACA/B,cAAAA,MAAM,CAACgC,IAAP,CAAY,WAAZ;AAZiB;AAAA;;AAAA;AAAA;AAAA;AAcjBC,cAAAA,OAAO,CAACC,GAAR;;AAdiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZL,YAAY;AAAA;AAAA;AAAA,KAAlB,CApB0B,CAsC1B;AACA;AACA;;;AAEA,SACE,4BACE,MAAC,MAAD,OADF,EAEE,MAAC,YAAD,QACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC;AAAlB,KACE,MAAC,MAAD;AAAQ,IAAA,EAAE,EAAC;AAAX,KACE,MAAC,OAAD,QACE,MAAC,WAAD,QACE;AAAM,IAAA,QAAQ,EAAEA;AAAhB,KACE;AAAG,IAAA,SAAS,EAAC;AAAb,uBADF,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,QAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,KAAK,EAAElB,IALT;AAME,IAAA,QAAQ,EAAEU,gBANZ;AAOE,IAAA,QAAQ,MAPV;AAQE,IAAA,KAAK,EAAC,OARR;AASE,IAAA,OAAO,EAAC;AATV,IADF,EAYE,MAAC,QAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,KAAK,EAAER,KALT;AAME,IAAA,QAAQ,EAAEY,iBANZ;AAOE,IAAA,QAAQ,MAPV;AAQE,IAAA,KAAK,EAAC,OARR;AASE,IAAA,OAAO,EAAC;AATV,IAZF,EAuBE,MAAC,QAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,IAAI,EAAC,KAFP;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,KAAK,EAAEV,KALT;AAME,IAAA,QAAQ,EAAEW,iBANZ;AAOE,IAAA,QAAQ,MAPV;AAQE,IAAA,KAAK,EAAC,OARR;AASE,IAAA,OAAO,EAAC;AATV,IAvBF,EAkCE,MAAC,QAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,KAAK,EAAET,KALT;AAME,IAAA,QAAQ,EAAEU,iBANZ;AAOE,IAAA,QAAQ,MAPV;AAQE,IAAA,KAAK,EAAC,OARR;AASE,IAAA,OAAO,EAAC;AATV,IAlCF,EA6CE,MAAC,QAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,IAAI,EAAC,YAFP;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,KAAK,EAAER,WALT;AAME,IAAA,QAAQ,EAAES,uBANZ;AAOE,IAAA,QAAQ;AAPV,IA7CF,CAFF,EAyDE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,IAAI,EAAC;AAA1B,mBADF,CAzDF,CADF,CADF,CADF,CADF,CADF,CAFF,EA2EE,MAAC,MAAD,OA3EF,CADF;AA+ED,CAzHD;;AA2HAnB,UAAU,CAAC0B,SAAX,GAAuB;AACrBtC,EAAAA,aAAa,EAAEC,SAAS,CAACsC,IAAV,CAAeC;AADT,CAAvB;AAIA,eAAezC,OAAO,CACpB,IADoB,EAEpB;AAAEC,EAAAA,aAAa,EAAbA;AAAF,CAFoB,CAAP,CAGbY,UAHa,CAAf","sourcesContent":["import React, { useState, SyntheticEvent } from 'react';\nimport { connect } from 'react-redux';\nimport { createProduct } from '../../store/actions/productActions';\nimport PropTypes from 'prop-types';\nimport { Navbar } from '../../components/Navbar/Navbar';\nimport Router from 'next/router';\nimport Footer from '../../components/Footer/Footer';\n// import { Redirect } from 'react-router-dom';\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody\n} from 'mdbreact';\n\nconst NewProduct = props => {\n  const [name, setName] = useState<string>('');\n  const [brand, setBrand] = useState<string>('');\n  const [price, setPrice] = useState<string>('');\n  const [image, setImage] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n  // const [redirect, setRedirect] = useState(false);\n\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setName(event.target.value);\n  const handleBrandChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setBrand(event.target.value);\n  const handlePriceChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setPrice(event.target.value);\n  const handleImageChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setImage(event.target.value);\n  const handleDescriptionChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => setDescription(event.target.value);\n\n  const handleSubmit = async (event: SyntheticEvent) => {\n    event.preventDefault();\n    const data = {\n      name,\n      brand,\n      price,\n      image,\n      description\n    };\n    try {\n      await props.createProduct(data);\n      // setRedirect(true);\n      Router.push('/products');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // if (redirect) {\n  //   return <Redirect to={'/products'} />;\n  // }\n\n  return (\n    <>\n      <Navbar />\n      <MDBContainer>\n        <MDBRow className=\"justify-content-center mt-5\">\n          <MDBCol md=\"6\">\n            <MDBCard>\n              <MDBCardBody>\n                <form onSubmit={handleSubmit}>\n                  <p className=\"h4 text-center py-1\">Add New Product</p>\n                  <div className=\"grey-text\">\n                    <MDBInput\n                      label=\"Name\"\n                      icon=\"user\"\n                      group\n                      type=\"text\"\n                      value={name}\n                      onChange={handleNameChange}\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                    />\n                    <MDBInput\n                      label=\"Brand\"\n                      icon=\"mobile\"\n                      group\n                      type=\"text\"\n                      value={brand}\n                      onChange={handleBrandChange}\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                    />\n                    <MDBInput\n                      label=\"Price\"\n                      icon=\"tag\"\n                      group\n                      type=\"number\"\n                      value={price}\n                      onChange={handlePriceChange}\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                    />\n                    <MDBInput\n                      label=\"Image\"\n                      icon=\"image\"\n                      group\n                      type=\"text\"\n                      value={image}\n                      onChange={handleImageChange}\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                    />\n                    <MDBInput\n                      label=\"Description\"\n                      icon=\"pencil-alt\"\n                      group\n                      type=\"text\"\n                      value={description}\n                      onChange={handleDescriptionChange}\n                      validate\n                    />\n                  </div>\n                  <div className=\"text-center\">\n                    <MDBBtn color=\"cyan\" type=\"submit\">\n                      Add Product\n                    </MDBBtn>\n                  </div>\n                </form>\n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n      <Footer />\n    </>\n  );\n};\n\nNewProduct.propTypes = {\n  createProduct: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { createProduct }\n)(NewProduct);\n"]},"metadata":{},"sourceType":"module"}