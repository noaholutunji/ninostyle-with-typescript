{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Router from 'next/router';\nimport cookie from 'js-cookie';\nimport { connect } from 'react-redux';\nimport { login } from '../../store/actions/authActions';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody } from 'mdbreact';\nexport const Login = props => {\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState(''); // const [redirect, setRedirect] = useState(false);\n\n  const handleEmailChange = event => setEmail(event.target.value);\n\n  const handlePasswordChange = event => setPassword(event.target.value);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const data = {\n      email,\n      password\n    };\n\n    try {\n      await props.login(data); // setRedirect(true);\n\n      Router.push('/products');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (cookie.get('jwtToken')) {\n    Router.push('/products');\n  }\n\n  return __jsx(React.Fragment, null, __jsx(MDBContainer, {\n    className: \"pb-5\"\n  }, __jsx(MDBRow, {\n    className: \"justify-content-center\"\n  }, __jsx(MDBCol, {\n    md: \"6\"\n  }, __jsx(MDBCard, {\n    className: \"mt-5\"\n  }, __jsx(MDBCardBody, null, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"p\", {\n    className: \"h4 text-center py-1\"\n  }, \"Login\"), __jsx(MDBInput, {\n    label: \"Email Address\",\n    icon: \"envelope\",\n    group: true,\n    type: \"email\",\n    value: email,\n    onChange: handleEmailChange,\n    validate: true,\n    error: \"wrong\",\n    success: \"right\"\n  }), __jsx(MDBInput, {\n    label: \"Password\",\n    icon: \"lock\",\n    group: true,\n    type: \"password\",\n    value: password,\n    onChange: handlePasswordChange,\n    validate: true\n  }), __jsx(\"div\", {\n    className: \"text-center\"\n  }, __jsx(MDBBtn, {\n    color: \"cyan\",\n    type: \"submit\"\n  }, \"Login\")))))))));\n};\nLogin.propTypes = {\n  login: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  login\n})(Login);","map":{"version":3,"sources":["/home/noah/Desktop/ninostyle-next-typescript/src/containers/Login/Login.tsx"],"names":["React","useState","PropTypes","Router","cookie","connect","login","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","MDBCard","MDBCardBody","Login","props","email","setEmail","password","setPassword","handleEmailChange","event","target","value","handlePasswordChange","handleSubmit","preventDefault","data","push","error","console","log","get","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, SyntheticEvent } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Router from 'next/router';\nimport cookie from 'js-cookie';\nimport { connect } from 'react-redux';\nimport { login } from '../../store/actions/authActions';\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody\n} from 'mdbreact';\n\nexport const Login = props => {\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  // const [redirect, setRedirect] = useState(false);\n\n  const handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setEmail(event.target.value);\n  const handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setPassword(event.target.value);\n\n  const handleSubmit = async (event: SyntheticEvent) => {\n    event.preventDefault();\n    const data = {\n      email,\n      password\n    };\n    try {\n      await props.login(data);\n      // setRedirect(true);\n      Router.push('/products');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (cookie.get('jwtToken')) {\n    Router.push('/products');\n  }\n\n  return (\n    <>\n      <MDBContainer className=\"pb-5\">\n        <MDBRow className=\"justify-content-center\">\n          <MDBCol md=\"6\">\n            <MDBCard className=\"mt-5\">\n              <MDBCardBody>\n                <form onSubmit={handleSubmit}>\n                  <p className=\"h4 text-center py-1\">Login</p>\n                  <MDBInput\n                    label=\"Email Address\"\n                    icon=\"envelope\"\n                    group\n                    type=\"email\"\n                    value={email}\n                    onChange={handleEmailChange}\n                    validate\n                    error=\"wrong\"\n                    success=\"right\"\n                  />\n                  <MDBInput\n                    label=\"Password\"\n                    icon=\"lock\"\n                    group\n                    type=\"password\"\n                    value={password}\n                    onChange={handlePasswordChange}\n                    validate\n                  />\n\n                  <div className=\"text-center\">\n                    <MDBBtn color=\"cyan\" type=\"submit\">\n                      Login\n                    </MDBBtn>\n                  </div>\n                </form>\n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { login }\n)(Login);\n"]},"metadata":{},"sourceType":"module"}